{"id": "7ea0a63b-5764-4646-ad0c-0c8cb9e9be68", "code": "# initial_program.py\n\nimport random\n\n# EVOLVE-BLOCK-START\ndef run_search():\n    n = 47\n    # all grid points\n    grid = [(x,y) for x in range(n) for y in range(n)]\n    S = []\n    # Start with a point near the center\n    S.append((n//2, n//2))\n\n    # Iterate through grid points in a spiral pattern from the center\n    for i in range(1, n // 2 + 1):\n        # Right\n        for x, y in [(n//2 + i, n//2 - j) for j in range(-i, i + 1)]:\n            if 0 <= x < n and 0 <= y < n:\n                ok = True\n                for p1 in range(len(S)):\n                    for p2 in range(p1 + 1, len(S)):\n                        x1, y1 = S[p1]\n                        x2, y2 = S[p2]\n                        if (y2 - y1) * (x - x1) == (y - y1) * (x2 - x1):\n                            ok = False\n                            break\n                    if not ok:\n                        break\n                if ok:\n                    S.append((x, y))\n\n        # Up\n        for x, y in [(n//2 + i - j - 1, n//2 + i) for j in range(i)]:\n            if 0 <= x < n and 0 <= y < n:\n                ok = True\n                for p1 in range(len(S)):\n                    for p2 in range(p1 + 1, len(S)):\n                        x1, y1 = S[p1]\n                        x2, y2 = S[p2]\n                        if (y2 - y1) * (x - x1) == (y - y1) * (x2 - x1):\n                            ok = False\n                            break\n                    if not ok:\n                        break\n                if ok:\n                    S.append((x, y))\n\n        # Left\n        for x, y in [(n//2 - i, n//2 + i - j - 1) for j in range(i)]:\n            if 0 <= x < n and 0 <= y < n:\n                ok = True\n                for p1 in range(len(S)):\n                    for p2 in range(p1 + 1, len(S)):\n                        x1, y1 = S[p1]\n                        x2, y2 = S[p2]\n                        if (y2 - y1) * (x - x1) == (y - y1) * (x2 - x1):\n                            ok = False\n                            break\n                    if not ok:\n                        break\n                if ok:\n                    S.append((x, y))\n\n        # Down\n        for x, y in [(n//2 - i + j + 1, n//2 - i) for j in range(i - 1)]:\n            if 0 <= x < n and 0 <= y < n:\n                ok = True\n                for p1 in range(len(S)):\n                    for p2 in range(p1 + 1, len(S)):\n                        x1, y1 = S[p1]\n                        x2, y2 = S[p2]\n                        if (y2 - y1) * (x - x1) == (y - y1) * (x2 - x1):\n                            ok = False\n                            break\n                    if not ok:\n                        break\n                if ok:\n                    S.append((x, y))\n    return S\n# EVOLVE-BLOCK-END ", "language": "python", "parent_id": "136f59ad-5509-4d60-b4b8-8d26676e77a6", "generation": 2, "timestamp": 1748146044.7988248, "iteration_found": 68, "metrics": {"point_count": 49.0, "overall_score": 49.0, "runtime": 0.03913092613220215, "valid_solution": 1.0}, "complexity": 0.0, "diversity": 0.0, "metadata": {"changes": "Change 1: Replace 17 lines with 68 lines", "parent_metrics": {"point_count": 71.0, "overall_score": 71.0, "runtime": 0.17279505729675293, "valid_solution": 1.0}}}