{"id": "3eb0aa94-1122-4962-aff0-cd1b689de384", "code": "# initial_program.py\n\nimport random\n\n# EVOLVE-BLOCK-START\ndef run_search():\n    n = 47\n    S = []\n    \n    # Use a better performing quadratic residue\n    for i in range(n):\n        S.append((i, (i*i*i + i) % n)) # Cubic residues are good for no-three-in-line. Adding i to make it less linear.\n\n    # Remove duplicate points from S, if any\n    S = list(set(S))\n\n    # Add a point with random co-ordinates to potentially improve the point count.\n    S.append((random.randint(0,n-1), random.randint(0,n-1)))\n    \n    return S\n# EVOLVE-BLOCK-END ", "language": "python", "parent_id": "bcff8bfb-66a5-4601-89a7-daf08889df10", "generation": 3, "timestamp": 1748145676.2850251, "iteration_found": 54, "metrics": {"point_count": 48.0, "overall_score": -1000.0, "runtime": 0.0015826225280761719, "valid_solution": 0.0}, "complexity": 0.0, "diversity": 0.0, "metadata": {"changes": "Change 1: 'S.append((i, (i*i*i) % n)) # Cubic residues are good for no-three-in-line.' to 'S.append((i, (i*i*i + i) % n)) # Cubic residues are good for no-three-in-line. Adding i to make it less linear.'\nChange 2: Replace 3 lines with 6 lines", "parent_metrics": {"point_count": 47.0, "overall_score": 0.0, "runtime": 0.0013289451599121094, "valid_solution": 0.0}}}